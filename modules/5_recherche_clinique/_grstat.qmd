
{{< include _header.qmd >}}

```{r}
#| include: false
library(tidyverse)
library(grstat)
```

## Le package `grstat` ðŸ“¦

-   Package interne au BBE
-   Reprend les macros SAS validÃ©es
-   Propose des sorties standardisÃ©es

::: {.callout-note title="Version" fragment-index="4" real-fragment-index="4"}
Cette prÃ©sentation a Ã©tÃ© rÃ©alisÃ©e avec `grstat` v`{r} packageVersion("grstat")`.
:::

## Documentation

Accessible dans RStudio et [en
ligne](https://oncostat.github.io/grstat/index.html):

<iframe src="https://oncostat.github.io/grstat/index.html" style="width:1000px; height:500px">

</iframe>


## Fonctions {.nonincremental}

Fonctions stables et validÃ©es :

-   Tableaux AE : `ae_table_grade()` & `ae_table_soc()`
-   Graphiques AE : `ae_plot_grade()` & `butterfly_plot()` 

. . .

Fonctions en cours de dÃ©veloppement : 

-  Swimmerplot & Waterfall-plot RECIST
-  Forest-plot
-  Sorties standard pour les modÃ¨les principaux
-  Vignettes/Book de documentation

. . .

::: {.callout-tip .no_fragment title="Liste"}
La liste des fonctions est accessible dans [les rÃ©fÃ©rences de la doc](https://oncostat.github.io/grstat/reference/index.html).
:::


## DonnÃ©es d'exemple

On va utiliser une base de donnÃ©es d'exemple.

```{r}
#| attr-source: "style='max-height: 400px !important;'"
#| cache: false
library(grstat)
db = grstat_example(r=0.4)
attach(db, warn.conflicts=FALSE)

db
```

::: {.callout-note title="EDCimport" fragment-index="2" real-fragment-index="2"}
`db` n'est pas (encore) une base EDCimport mais fonctionne de la mÃªme faÃ§on.
:::


## AE par grade : tableaux

::::: {.panel-tabset .no_fragment style="grid-template-columns: 16% 82%;"}

### Total

```{r}
#| classes: no_fragment
ae_table_grade(df_ae=ae, df_enrol=enrolres, arm=NULL) %>%
  as_flextable(header_show_n=TRUE)
```

### Par bras

```{r}
#| classes: no_fragment
ae_table_grade(df_ae=ae, df_enrol=enrolres, arm="arm") %>%
  as_flextable(header_show_n=TRUE)
```

### SAE

```{r}
#| classes: no_fragment
ae %>%
  filter(sae=="Yes") %>%
  ae_table_grade(df_enrol=enrolres, arm="arm", ae_label="SAE") %>%
  as_flextable(header_show_n=TRUE)
```

### Population

Pour dÃ©crire une sous-population, il faut filtrer `df_enrol`:

```{r}
#| classes: no_fragment
enrolres2 = enrolres %>%
  filter(arm=="Control")
ae %>%
  ae_table_grade(df_enrol=enrolres2, arm="arm") %>%
  as_flextable(header_show_n=TRUE)
```

### Postprod

On peut modifier le rÃ©sultat avant de passer en `flextable`:

```{r}
#| classes: no_fragment
ae %>%
  ae_table_grade(df_enrol=enrolres, arm="arm") %>%
  filter(!variable %in% c("Grade 1", "Grade 2")) %>%
  as_flextable(header_show_n=TRUE)
```

:::::


## AE par grade : graphiques

::::: {.panel-tabset .no_fragment style="grid-template-columns: 16% 82%;"}

### Total

```{r}
#| classes: no_fragment
#| fig-height: 3.7
ae_plot_grade(df_ae=ae, df_enrol=enrolres, arm=NULL) #340
```

### Par bras

```{r}
#| classes: no_fragment
#| fig-height: 3.7
ae_plot_grade(df_ae=ae, df_enrol=enrolres, arm="ARM", 
              variant=c("max", "sup")) #453
```

### Absolues

âš  Attention aux valeurs absolues pour des essais non Ã©quilibrÃ©s !

```{r}
#| classes: no_fragment
#| fig-height: 3.7
ae_plot_grade(df_ae=ae, df_enrol=enrolres, arm="ARM", 
              type="absolute") #567
```


:::::


## AE par SOC : tableaux

::::: {.panel-tabset .no_fragment style="grid-template-columns: 16% 82%;"}

### Total

```{r}
#| classes: no_fragment
ae_table_soc(df_ae=ae, df_enrol=enrolres, arm=NULL) %>%
  as_flextable()
```

### Par bras

```{r}
#| classes: no_fragment
ae_table_soc(df_ae=ae, df_enrol=enrolres, arm="arm") %>%
  as_flextable()
```


### Population

Idem, pour dÃ©crire une sous-population, il faut filtrer `df_enrol`:

```{r}
#| classes: no_fragment
enrolres2 = enrolres %>% head(50)
ae %>%
  ae_table_soc(df_enrol=enrolres2, arm="arm") %>%
  as_flextable()
```

### Avec Term

```{r}
#| classes: no_fragment
ae_table_soc(df_ae=ae, df_enrol=enrolres, arm="ARM", 
             term="aeterm") %>%
  as_flextable()
```

:::::

## AE par SOC : graphiques

::::: {.panel-tabset .no_fragment style="grid-template-columns: 16% 82%;"}

### Butterfly

```{r}
#| classes: no_fragment
#| fig-height: 3.7
butterfly_plot(df_ae=ae, df_enrol=enrolres)
```

### Serious

```{r}
#| classes: no_fragment
#| fig-height: 3.7
ae %>% 
  mutate(serious = sae=="Yes") %>% #colonne logical/booleanZ
  butterfly_plot(df_enrol=enrolres, severe="serious") +
  labs(caption="Darker areas represent Serious Adverse Events")
```

:::::

<script src="assets/custom.js"></script>


## DEV: `gr_new_project()`


::::: columns
::: {.column width="60%"}
 - Fonction Ã©volutive pour crÃ©er un nouveau projet.
 - CrÃ©e un projet RStudio dans le chemin spÃ©cifiÃ©
 - CrÃ©e un squelette standard avec des fichiers prÃ©-remplis
 - La fonction va Ã©voluer avec le temps
 
 ```r
 gr_new_project("HRNBL2/IDMC_27")
 ```
 
:::

::: {.column width="40%"}
```
â”œâ”€â”€ main.R
â”œâ”€â”€ NEWS.md
â”œâ”€â”€ R
â”‚   â”œâ”€â”€ init.R
â”‚   â”œâ”€â”€ read.R
â”‚   â”œâ”€â”€ check.R
â”‚   â”œâ”€â”€ description.R
â”‚   â”œâ”€â”€ graph.R
â”‚   â””â”€â”€ report.R
â”œâ”€â”€ README.md
â””â”€â”€ my_proj.Rproj

```
:::
:::::


